name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry cache for Python dependencies
      uses: actions/cache@v3
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_HOME="$HOME/.poetry" python - --yes
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install --no-interaction -E protobuf
        poetry show --tree
    - name: Test poetry build step
      run: poetry build
    - name: Test with pytest
      run: |
        PACKAGENAME=$(poetry version | awk {'print $1'}) && pytest tests -v
        PACKAGENAME=$(poetry version | awk {'print $1'}) && PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python pytest --cov=$PACKAGENAME/ tests -v
    - name: Lint with flake8
      run: |
        PACKAGENAME=$(poetry version | awk {'print $1'}) && flake8 $PACKAGENAME/ tests/
    - name: Type check with mypy
      run: |
        PACKAGENAME=$(poetry version | awk {'print $1'}) && mypy $PACKAGENAME/ tests/types/ tests/examples/
    - name: Additional type tests
      run: |
        python tests/types/implementation_test.py
        python tests/types/conversion_type.py
    - name: Codecov
      run: |
        codecov --token=${{ secrets.CODECOV_TOKEN }}
